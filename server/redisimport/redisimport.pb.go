// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.6.1
// source: redisimport/redisimport.proto

package redisimport

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        float64 `protobuf:"fixed64,1,opt,name=id,proto3" json:"id,omitempty"`
	FirstName string  `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName  string  `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Email     string  `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Gender    string  `protobuf:"bytes,5,opt,name=gender,proto3" json:"gender,omitempty"`
	IpAddress string  `protobuf:"bytes,6,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	UserName  string  `protobuf:"bytes,7,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Agent     string  `protobuf:"bytes,8,opt,name=agent,proto3" json:"agent,omitempty"`
	Country   string  `protobuf:"bytes,9,opt,name=country,proto3" json:"country,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redisimport_redisimport_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_redisimport_redisimport_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_redisimport_redisimport_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetId() float64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *User) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *User) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *User) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *User) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *User) GetAgent() string {
	if x != nil {
		return x.Agent
	}
	return ""
}

func (x *User) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

// The response message containing the greetings
type ImportReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	User    string `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *ImportReply) Reset() {
	*x = ImportReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redisimport_redisimport_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportReply) ProtoMessage() {}

func (x *ImportReply) ProtoReflect() protoreflect.Message {
	mi := &file_redisimport_redisimport_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportReply.ProtoReflect.Descriptor instead.
func (*ImportReply) Descriptor() ([]byte, []int) {
	return file_redisimport_redisimport_proto_rawDescGZIP(), []int{1}
}

func (x *ImportReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ImportReply) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

var File_redisimport_redisimport_proto protoreflect.FileDescriptor

var file_redisimport_redisimport_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x72, 0x65, 0x64, 0x69, 0x73, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x72, 0x65,
	0x64, 0x69, 0x73, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0b, 0x72, 0x65, 0x64, 0x69, 0x73, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x22, 0xec, 0x01, 0x0a,
	0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x3b, 0x0a, 0x0b, 0x49,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x32, 0x46, 0x0a, 0x0b, 0x52, 0x65, 0x64, 0x69,
	0x73, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x37, 0x0a, 0x06, 0x49, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x11, 0x2e, 0x72, 0x65, 0x64, 0x69, 0x73, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x1a, 0x18, 0x2e, 0x72, 0x65, 0x64, 0x69, 0x73, 0x69, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_redisimport_redisimport_proto_rawDescOnce sync.Once
	file_redisimport_redisimport_proto_rawDescData = file_redisimport_redisimport_proto_rawDesc
)

func file_redisimport_redisimport_proto_rawDescGZIP() []byte {
	file_redisimport_redisimport_proto_rawDescOnce.Do(func() {
		file_redisimport_redisimport_proto_rawDescData = protoimpl.X.CompressGZIP(file_redisimport_redisimport_proto_rawDescData)
	})
	return file_redisimport_redisimport_proto_rawDescData
}

var file_redisimport_redisimport_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_redisimport_redisimport_proto_goTypes = []interface{}{
	(*User)(nil),        // 0: redisimport.User
	(*ImportReply)(nil), // 1: redisimport.ImportReply
}
var file_redisimport_redisimport_proto_depIdxs = []int32{
	0, // 0: redisimport.RedisImport.Import:input_type -> redisimport.User
	1, // 1: redisimport.RedisImport.Import:output_type -> redisimport.ImportReply
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_redisimport_redisimport_proto_init() }
func file_redisimport_redisimport_proto_init() {
	if File_redisimport_redisimport_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_redisimport_redisimport_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_redisimport_redisimport_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_redisimport_redisimport_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_redisimport_redisimport_proto_goTypes,
		DependencyIndexes: file_redisimport_redisimport_proto_depIdxs,
		MessageInfos:      file_redisimport_redisimport_proto_msgTypes,
	}.Build()
	File_redisimport_redisimport_proto = out.File
	file_redisimport_redisimport_proto_rawDesc = nil
	file_redisimport_redisimport_proto_goTypes = nil
	file_redisimport_redisimport_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RedisImportClient is the client API for RedisImport service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RedisImportClient interface {
	Import(ctx context.Context, in *User, opts ...grpc.CallOption) (*ImportReply, error)
}

type redisImportClient struct {
	cc grpc.ClientConnInterface
}

func NewRedisImportClient(cc grpc.ClientConnInterface) RedisImportClient {
	return &redisImportClient{cc}
}

func (c *redisImportClient) Import(ctx context.Context, in *User, opts ...grpc.CallOption) (*ImportReply, error) {
	out := new(ImportReply)
	err := c.cc.Invoke(ctx, "/redisimport.RedisImport/Import", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RedisImportServer is the server API for RedisImport service.
type RedisImportServer interface {
	Import(context.Context, *User) (*ImportReply, error)
}

// UnimplementedRedisImportServer can be embedded to have forward compatible implementations.
type UnimplementedRedisImportServer struct {
}

func (*UnimplementedRedisImportServer) Import(context.Context, *User) (*ImportReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Import not implemented")
}

func RegisterRedisImportServer(s *grpc.Server, srv RedisImportServer) {
	s.RegisterService(&_RedisImport_serviceDesc, srv)
}

func _RedisImport_Import_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RedisImportServer).Import(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/redisimport.RedisImport/Import",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RedisImportServer).Import(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

var _RedisImport_serviceDesc = grpc.ServiceDesc{
	ServiceName: "redisimport.RedisImport",
	HandlerType: (*RedisImportServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Import",
			Handler:    _RedisImport_Import_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "redisimport/redisimport.proto",
}
